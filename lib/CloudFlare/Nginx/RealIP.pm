package CloudFlare::Nginx::RealIP;

use 5.008_001;
use strict;
use warnings;

our $VERSION = 0.001;

use LWP::UserAgent;
use Net::CIDR;
use Time::Piece;
use Array::Utils qw(array_diff);

sub new {
    my ($class, %args) = @_;

    $args{ua} = LWP::UserAgent->new() unless defined $args{ua};
    bless {
        basic_url   => 'https://www.cloudflare.com/',
        ips_lists   => [qw(ips-v4 ips-v6)],
        output_file => "/etc/nginx/cloudflare-realip.conf",
        %args
    }, $class;
}

sub _get_list {
    my ($self, $url) = @_;

    my $response = $self->{ua}->get($url);
    die qq(Error retrieving "$url": ) . $response->status_line
      unless $response->is_success;

    my $text = $response->decoded_content;
    my @ips = split /\n/, $text;
    foreach my $ip (@ips) {
        die qq(Received invalid cidr from "$url": $ip)
          unless Net::CIDR::cidrvalidate($ip);
    }

    return @ips;
}

sub get_ip_list {
    my $self = shift;

    my @ips;
    foreach my $ips_list_uri (@{$self->{ips_lists}}) {
        my $url = $self->{basic_url} . $ips_list_uri;
        push @ips, $self->_get_list($url);
    }
    return @ips;
}

my $SETREALIP_RE = qr(
    ^
    \s*
    set_real_ip_from
    \s*
    (.+)
    \s*
    ;
    \s*
    $
)ix;

sub old_config_matches {
    my ($self, $ips) = @_;
    my @old_ips;

    open my $fh, '<', $self->{output_file} or return;
    /$SETREALIP_RE/ && push @old_ips, $1 foreach (<$fh>);
    close $fh;

    return !array_diff(@old_ips, @$ips);
}

sub write_config {
    my ($self, $ips) = @_;

    open my $fh, '>', $self->{output_file}
      or die qq(Unable to open "$self->{output_file}": $!);

    print $fh <<"HEADER";
# This file was automatically generated by the $0
# on @{[localtime->strftime]}
HEADER

    print $fh join("\n", map {"set_real_ip_from $_;"} @$ips), "\n";

    print $fh <<"FOOTER";
real_ip_header   CF-Connecting-IP;
FOOTER

    close $fh;
}

sub do {
    my $self = shift;

    my @ips = $self->get_ip_list;

    if ($self->old_config_matches(\@ips)) {
        warn "Cloudflare addresses are not changed\n";
        exit 3;
    }

    $self->write_config(\@ips);
    print qq(Successfully updated "$self->{output_file}"\n);
}


1;
__END__

=head1 NAME

CloudFlare::Nginx::RealIP - generate nginx configuration files to set realip
from CloudFlare CDN

=head1 SYNOPSIS

    cloudflare_update_nginx_realip > /dev/null 2>&1 && /etc/init.d/nginx reload

=head1 AUTHOR

Sergey Zasenko, C<undef@cpan.org>.

=cut
